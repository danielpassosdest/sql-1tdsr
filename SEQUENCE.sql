DROP TABLE T_TESTE_DDL_SEQUENCE CASCADE CONSTRAINTS;

-- CRIAR UMA TABELA PARA TESTES
CREATE TABLE T_TESTE_DDL_SEQUENCE
(
	CD_TESTE_SQ	NUMBER(3) NOT NULL,
	NM_TESTE_SQ VARCHAR2(30) NOT NULL
);
-- ADICIONAR A CONSTANT CHAVE PRIMARIA
ALTER TABLE T_TESTE_DDL_SEQUENCE
ADD CONSTRAINT PK_TESTE_DDL_SEQUENCE
PRIMARY KEY (CD_TESTE_SQ);

DROP SEQUENCE SQ_TESTE_DDL_SEQUENCE;

CREATE SEQUENCE SQ_TESTE_DDL_SEQUENCE
 START WITH 1 --Primeiro número a ser gerado
 INCREMENT BY 1 --Valor do incremento (≠ zero)
 MAXVALUE  999 --Valor máximo da sequencia
 NOCACHE --NOCACHE: sem cache
 NOCYCLE; --Após chegar ao limite, não reinicia
 
INSERT INTO T_TESTE_DDL_SEQUENCE 
VALUES (SQ_TESTE_DDL_SEQUENCE.NEXTVAL, 'TESTE');-- RODAR DUAS VEZES

SELECT * FROM T_TESTE_DDL_SEQUENCE;

SELECT SQ_TESTE_DDL_SEQUENCE.CURRVAL FROM DUAL;

SELECT * FROM USER_SEQUENCES WHERE SEQUENCE_NAME = 'SQ_TESTE_DDL_SEQUENCE';
 -- ALTERANDO A SEQUENCE
 ALTER SEQUENCE SQ_TESTE_DDL_SEQUENCE
 INCREMENT BY 2
 MAXVALUE 900;

DROP SEQUENCE SQ_TESTE_DDL_SEQUENCE; 

CREATE OR REPLACE TRIGGER TRG_TESTE_DDL_SEQUENCE
BEFORE INSERT ON T_TESTE_DDL_SEQUENCE
FOR EACH ROW
BEGIN
    :NEW.CD_TESTE_SQ := SQ_TESTE_DDL_SEQUENCE.NEXTVAL;
END;
/
DESC T_TESTE_DDL_SEQUENCE;

INSERT INTO T_TESTE_DDL_SEQUENCE (NM_TESTE_SQ) 
VALUES ('TESTE TRIGGER');

SELECT * FROM T_TESTE_DDL_SEQUENCE;

DROP TABLE T_TESTE_DDL_AUTO CASCADE CONSTRAINTS;
CREATE TABLE T_TESTE_DDL_AUTO(
    CD_TESTE  NUMBER(3) GENERATED ALWAYS AS IDENTITY,
    NM_TESTE  VARCHAR2(30)
);
INSERT INTO T_TESTE_DDL_AUTO (NM_TESTE) VALUES ('TESTE AUTO');
SELECT * FROM T_TESTE_DDL_AUTO;